def knuth(n,a,b): # returns a ↑ⁿ b
    if n == 1:
        return a ** b
    elif b == 0:
        return 1
    else:
        return knuth(n-1,a,knuth(n,a,b-1))

def conway(S):
    if len(S) == 2:      # S is of the form a → b
        a,b = S
        return a**b
    elif len(S) == 3:    # S is of the form a → b → c
        a,b,c = S
        return knuth(c,a,b)
    elif len(S) >= 4:
        if S[-1] == 1:    # S is of the form # → 1
            *T,_ = S
            return conway(T)
        elif S[-2] == 1:  # S is of the form # → 1 → a
            *T,_,a = S
            return conway(T)
        else:             # S is of the form # → a → b
            *T,a,b = S
            return conway(T+[conway(T+[a-1,b]),b-1])

def cg(n):
    return conway(n*[n])

print(conway([3,3,2,1]))  # should print 3 → 3 → 2 → 1 = 3 ↑↑ 3
print(cg(5))              # should print cg(5) = 5 → 5 → 5 → 5 → 5
