def illionsum(n):
    def f(n,b):
        if n < 0: return 0
        return (n//b + 1)*(2*n - n//b * b)//2

    lessthan1000 = [len(illi(n)) for n in range(1000)] + [len(illi(0))]     # milli, billi, ..., 999-illi, nilli

    ans = 8 + 2*n
    for i in range(1,1001):
        ans += lessthan1000[i] * ((n-i) // 1000 + 1)

    pow10 = 1000
    while pow10 <= n:
        for i in range(1,1001):
            ans += lessthan1000[i] * (f(n-i*pow10+1, 1000*pow10) - f(n-(i+1)*pow10+1, 1000*pow10))
        pow10 *= 1000

    return ans

def answer_pow10(m):    # answer(10**m)
    assert m >= 3

    big = 297 + 21113 * (m//3) + 999 * illionsum((m-6)//3)
    k = (m-3)//3
    small = -297 + len(illion(k))

    if m % 3 == 0:
        small += 3
    elif m % 3 == 1:
        big += 3600 + 900 * len(illion(k))
        small += 3
    elif m % 3 == 2:
        big += 8540 + 990 * len(illion(k))
        small += 10

    return f"{big} * 10**{m-3} {'+' if small >= 0 else '-'} {abs(small)}"   # print out  [big * 10**(m-3) + small]  in a nicer format
